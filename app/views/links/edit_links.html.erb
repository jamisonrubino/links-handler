<%= form_tag("/all_links", id: "edit-links", method: "post") do %>
  <div id="ready">
    <span>Ready to submit</span>
  </div>
  <% puts @converted_links %>
  <% @converted_links.each_with_index do |section, i| %>
    <div class="section">
      <%= "<h2>#{section['section']}</h2>".html_safe %>
      <% section['links'].each_with_index do |link, j| %>

        <span class="link">
          <% unless link['title'].nil? %>
            <span class="edit-link" onClick="toggleInput(<%= "#{i}, #{j}"  %>);">[Edit]</span>
            <span class="author"><%= "<b>#{link['author']} - </b>".html_safe %></span>
            <%= text_field_tag "author#{i}[#{j}]", "", class: "author-input hide" %>

            <% @temp_title = (link['title'] == "manual" ? link['placeholder'] : link['title']) %>
            <%= text_field_tag "title#{i}[#{j}]", @temp_title, class: "title-input hide" %>

            <% @temp_title.split(" ").each_with_index do |title_word, x| %>

              <span>
                <a onClick="caseChange(this, <%= "#{i}, #{j}, #{x}" %>);" class="title-word"><%= title_word %></a>
                <%= check_box_tag "#{i}[#{j}[#{x}]][]", "dc", false, class: "hidden" %>
                <%= check_box_tag "#{i}[#{j}[#{x}]][]", "uc", false, class: "hidden" %>
                <%= check_box_tag "#{i}[#{j}[#{x}]][]", "tc", false, class: "hidden" %>
                <%= check_box_tag "#{i}[#{j}[#{x}]][]", "del", false, class: "hidden" %>
              </span>
            <% end %>

            <%= link_to "#{link['url'].slice(0, 30)}...", link['url'], class: "url", target: "_blank" %>
            <%= link_to "Open frame", preview_site_path(:url => link['url']), remote: true, class: "url_open_frame", onclick: "handleUrlPreview()" %>
            <span class="flaggedspan">
              <% @size_warning = @temp_title.size+link['author'].size+3 > 77 %>
              <% @manual_warning = link['title'] == "manual" %>
              <% if @size_warning == true || @manual_warning == true %>
                <% @msg = "Total length" if @size_warning == true %>
                <% @msg = "Manual entry" if @manual_warning == true %>
                <%= @msg if @msg.present? %>
                <%= check_box_tag "f#{i}[#{j}]", "flagged #{}", true %>
                <%= label_tag "f#{i}[#{j}]", "Flag" %>
              <% else %>
                <%= check_box_tag "f#{i}[#{j}]", "flagged", false %>
                <%= label_tag "f#{i}[#{j}]", "Flag" %>
              <% end %>
            </span>
            <br>
          <% end %>
        </span>
      <% end %>
    </div>
  <% end %>
  <br><br>
  <!-- <text_area_tag(:sites, @new_sites_html, size: "80x12") %> -->
  <%= submit_tag "To HTML" %>
<% end %>


<script type="text/javascript">
  (function(){
    $("#edit-links input[type=submit]").prop("disabled", true);
      var disabled = true;
      $("#ready").click(function(){
        if (disabled===true) {
          disabled = false;
          $("#edit-links input[type=submit]").removeAttr("disabled");
          $("#ready span").addClass("ready");
        } else {
          disabled = true;
          $("#edit-links input[type=submit]").prop("disabled", true);
          $("#ready span").removeClass();
        }
      });

    $("span.flaggedspan").each(function(i) {
    	$(this).change(function() {
        	flag(i);
    	});
    	if ($(this).find("input").is(":checked")) $("span.link").eq(i).addClass("flagged");
    });


// LINK URL "OPEN FRAME" BUTTON APPEARS ON HOVER
    $(".url").each(function(i){
      var $that = $(this),
        sibling = $that.siblings('.url_open_frame'),
        timeout
      $(this).mouseenter(function() {
        sibling.fadeIn(200)
        clearTimeout(timeout)
      }).mouseleave(function() {
        clearTimeout(timeout)
        timeout = setTimeout(function(){
          if (jQuery(':hover').filter(sibling).length===0)
            sibling.fadeOut(200)
        }, 1000)
      })
      sibling.mouseleave(function() {
        clearTimeout(timeout)
        timeout = setTimeout(function(){
          if (jQuery(':hover').filter(sibling).length===0)
            sibling.fadeOut(200)
        }, 1000)
      })
    })
  }());

  function flag(index) {
    $("span.flaggedspan").eq(index).find("input").is(":checked") ? $("span.link").eq(index).addClass("flagged") : $("span.link").eq(index).removeClass("flagged");
  }

  function caseChange(link, i, j, x) {
    var newLink = link.innerHTML;
    var reg = /^[a-zA-Z]$/;
    var cap;
    var sliced = false;
    var beg = false;

    var boxes = $("input:checkbox[name='"+i+"["+j+"["+x+"]][]']"),
    tcBox = boxes.filter("[value='tc']"),
    ucBox = boxes.filter("[value='uc']"),
    dcBox = boxes.filter("[value='dc']"),
    delBox = boxes.filter("[value='del']"),
    allBoxes = [tcBox, ucBox, dcBox, delBox],
    boxName,
    checked = $("input:checkbox[name='"+i+"["+j+"["+x+"]][]']:checked").eq(0)


    // FIND THE FIRST A-Za-z CHAR, SEPARATE BEGINNING CHARS FROM LETTERS, MANIPULATE LETTERS, REJOIN LATER
    if (reg.test(newLink[0]) === false) {
      for (var i=0; i<newLink.length; i++) {
        if (reg.test(newLink[i]) === true) {
          sliced = true
          beg = newLink.slice(0,i)
          newLink = newLink.slice(i)
          break
        }
      }
    }

    if (newLink === newLink.toUpperCase() && delBox.is(":checked") == false) {
      console.log(link);
      link.classList.add("del");
      boxName = "del"
    } else if (delBox.is(":checked")) {
      if (sliced) {
        link.innerHTML = beg + newLink.toLowerCase();
      } else {
        link.innerHTML = newLink.toLowerCase();
      }
      link.classList.remove("del");
      boxName = "dc"
    } else if (newLink[0] === newLink[0].toUpperCase() && newLink !== newLink.toUpperCase()) {
      if (sliced) {
        link.innerHTML = beg + newLink.toUpperCase();
      } else {
        link.innerHTML = newLink.toUpperCase();
      }
      boxName = "uc"
    } else if (newLink === newLink.toLowerCase()) {
      if (sliced) {
        link.innerHTML = beg + newLink[0].toUpperCase() + newLink.slice(1);
      } else {
        link.innerHTML = newLink[0].toUpperCase() + newLink.slice(1);
      }
      boxName = "tc"
    }
    allBoxes.map(box=>box.prop("checked", (box.val()===boxName)))
  }

  function toggleInput(i, j) {
    var link = $(".section").eq(i).find($("span.link")).eq(j);
    if (link.find("span.author").text().length > 0) var author = link.find("span.author").text();
    var title = [];
    link.children().each((index) => {
      let word = link.find("span").eq(index);
      if (word.hasClass("")) {
        title.push(word.find("a").eq(0).text());
        if (!word.hasClass("flaggedspan")) {
          word.addClass("hide");
        }
      } else if (word.hasClass("author") || word.hasClass("edit-link")) {
        word.addClass("hide");
      }
    });

    $(".section").eq(i).find($("input.title-input")).eq(j).val(title.join(" "));
    $(".section").eq(i).find($("input.author-input")).eq(j).val(author.slice(0,-3));
    $(".section").eq(i).find($("input.title-input")).eq(j).removeClass("hide");
    $(".section").eq(i).find($("input.author-input")).eq(j).removeClass("hide");
  }

  $(window).on("beforeunload", e=>confirm("Are you sure you want to leave?"))


</script>
