<p id="notice"><%= notice %></p>
<h1>Sites</h1>

<%= form_tag("/add_new_sites", method: "post", class: "new_sites_form") do %>
  <table class="new_sites_table">
    <thead>
      <tr>
        <th><a onclick="toggleAllCheckboxes()">Add site</a></th>
        <th>Author</th>
        <th>URL</th>
        <th>CSS</th>
        <th>Article URL</th>
        <th colspan="4"></th>
      </tr>
    </thead>
      <tbody>
        <% @sites.each_with_index do |site, i| %>
          <tr>
            <td><%= check_box_tag "selected_sites[]", site.id, class: "new_site_checkbox", checked: true %></td>
            <td><%= text_field_tag(:author, "", placeholder: "Author") %></td>
            <td><%= text_field_tag(:url, "", placeholder: "Base URL") %></td>
            <td><%= text_field_tag(:css, "", placeholder: "CSS selector for title") %></td>
            <td><%= link_to "#{site.url[0..20]}...", site.url, target: "_blank" %></td>
            <td><%= link_to "Update", edit_site_path(site), data: { confirm: "This will erase your input and direct you to a new page." } %></td>
            <td><%= link_to 'Destroy', site, method: :delete, data: { confirm: 'Are you sure?' } %></td>
            <td><%= button_to "Submit", update_site_path, remote: true, method: "post", data: {params: { author: "", url: "", css: "", new: 0, index: i }}, disabled: true %></td>
          </tr>
        <% end %>
      </tbody>
  </table>
  <%= submit_tag("Submit all") %>
<% end %>

<br>

<%= link_to 'Back', sites_path, class: "footer_nav_link" %>
<%= link_to 'New Site', new_site_path, class: "footer_nav_link" %>


<script type="text/javascript">
  function checkInputs(tr) {
    let els = tr.find('td input[type=text]'),
      empty = false

    for (var item of els)
      if (item.value.length < 1) empty = true

    if (empty) {
      tr.removeClass('filled')
    } else {
      let author = tr.find('td input[name=author]').eq(0),
        url = tr.find('td input[name=url]').eq(0),
        css = tr.find('td input[name=css]').eq(0),
        submit = tr.find('td input[type=submit]').eq(0),
        params = submit.data("params")
      tr.addClass('filled')

      submit.data("params", {author: author, url: url, css: css, new: 0, index: params.index} )
    }
  }

  var allChecked = true,
    checkboxes = $('input[type=checkbox]'),
    textInputs = $('input[type=text]')

  function toggleAllCheckboxes() {
    checkboxes.prop('checked', !allChecked)
    allChecked = !allChecked
    checkboxes.each(function(i){
      handleCheckboxChange(checkboxes.eq(i))
      checkInputs(checkboxes.eq(i).parents('tr'))
    })
  }

  function handleCheckboxChange(chbx) {
    var tr = chbx.parents('tr')
    if (chbx.is(":checked")) {
      checkInputs(tr)
      tr.removeClass('deselected')
    } else {
      tr.addClass('deselected')
    }
  }

  (function(){
    checkboxes.each(function(i){
      var $that = $(this)
      $(this).parents('td').on("click", function(e){
  	    $that.prop("checked", !$that.prop("checked"))
        handleCheckboxChange($that)
      })
    })

    textInputs.each(function(i){
      var $that = $(this)
      $(this).on("change", function(){
        let tr = textInputs.eq(i).parents('tr')
        checkInputs(tr)
      })
    })
  })()

</script>
